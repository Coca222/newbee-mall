<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ltd.newbee.mall.dao.NewBeeMallGoodsMapper">
    <resultMap id="BaseResultMap" type="ltd.newbee.mall.entity.NewBeeMallGoods">
        <id column="goods_id" jdbcType="BIGINT" property="goodsId"/>
        <result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
        <result column="goods_intro" jdbcType="VARCHAR" property="goodsIntro"/>
        <result column="goods_category_id" jdbcType="BIGINT" property="goodsCategoryId"/>
        <result column="goods_cover_img" jdbcType="VARCHAR" property="goodsCoverImg"/>
        <result column="goods_carousel" jdbcType="VARCHAR" property="goodsCarousel"/>
        <result column="original_price" jdbcType="INTEGER" property="originalPrice"/>
        <result column="selling_price" jdbcType="INTEGER" property="sellingPrice"/>
        <result column="stock_num" jdbcType="INTEGER" property="stockNum"/>
        <result column="tag" jdbcType="VARCHAR" property="tag"/>
        <result column="goods_sell_status" jdbcType="TINYINT" property="goodsSellStatus"/>
        <result column="create_user" jdbcType="INTEGER" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user" jdbcType="INTEGER" property="updateUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <resultMap id="GoodsSaleResultMap" type="ltd.newbee.mall.entity.GoodsSale">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="start_date" jdbcType="TIMESTAMP" property="startDate"/>
        <result column="end_date" jdbcType="TIMESTAMP" property="endDate"/>
        <result column="campaign" jdbcType="VARCHAR" property="campaign"/>
        <result column="content1" jdbcType="VARCHAR" property="content1"/>
        <result column="content2" jdbcType="VARCHAR" property="content2"/>
        <result column="content3" jdbcType="VARCHAR" property="content3"/>
        <result column="content4" jdbcType="VARCHAR" property="content4"/>
        <result column="content5" jdbcType="VARCHAR" property="content5"/>
        <result column="flag" jdbcType="VARCHAR" property="flag"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="ltd.newbee.mall.entity.NewBeeMallGoods">
        <result column="goods_detail_content" jdbcType="LONGVARCHAR" property="goodsDetailContent"/>
    </resultMap>
    <sql id="Base_Column_List">
    goods_id, goods_name, goods_intro,goods_category_id, goods_cover_img, goods_carousel, original_price,
    selling_price, stock_num, tag, goods_sell_status, create_user, create_time, update_user, 
    update_time
  </sql>
    <sql id="Blob_Column_List">
    goods_detail_content
  </sql>

    <insert id="batchInsert">
        INSERT INTO tb_newbee_mall_goods_info(goods_name, goods_intro, goods_category_id,goods_cover_img,
        goods_carousel,
        goods_detail_content,original_price,
        selling_price, stock_num)
        VALUES
        <foreach collection="newBeeMallGoodsList" item="goods" separator=",">
            (#{goods.goodsName},#{goods.goodsIntro},#{goods.goodsCategoryId},#{goods.goodsCoverImg},#{goods.goodsCarousel},#{goods.goodsDetailContent},#{goods.originalPrice},#{goods.sellingPrice},#{goods.stockNum})
        </foreach>
    </insert>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from tb_newbee_mall_goods_info
        where goods_id = #{goodsId,jdbcType=BIGINT}
    </select>
    <update id="updateStockNum">
        <foreach collection="stockNumDTOS" item="stockNumDTO">
            update tb_newbee_mall_goods_info set stock_num = stock_num-#{stockNumDTO.goodsCount}
            where goods_id = #{stockNumDTO.goodsId} and stock_num>=#{stockNumDTO.goodsCount} and goods_sell_status = 0;
        </foreach>
    </update>
    <update id="batchUpdateSellStatus">
        update tb_newbee_mall_goods_info
        set goods_sell_status=#{sellStatus},update_time=now() where goods_id in
        <foreach item="id" collection="orderIds" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <select id="findNewBeeMallGoodsList" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_newbee_mall_goods_info
        <where>
            <if test="goodsName!=null and goodsName!=''">
                and goods_name like CONCAT('%',#{goodsName},'%')
            </if>
            <if test="goodsSellStatus!=null and goodsSellStatus!=''">
                and goods_sell_status = #{goodsSellStatus}
            </if>
            <if test="startTime != null and startTime.trim() != ''">
                and create_time &gt; #{startTime}
            </if>
            <if test="endTime != null and endTime.trim() != ''">
                and create_time &lt; #{endTime}
            </if>
        </where>
        order by goods_id desc
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="findNewBeeMallGoodsListBySearch" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_newbee_mall_goods_info
        <where>
            <if test="keyword!=null and keyword!=''">
                and (goods_name like CONCAT('%',#{keyword},'%') or goods_intro like CONCAT('%',#{keyword},'%'))
            </if>
            <if test="goodsCategoryId!=null and goodsCategoryId!=''">
                and goods_category_id = #{goodsCategoryId}
            </if>
            <if test="goodsSellStatus!=null">
                and goods_sell_status = #{goodsSellStatus}
            </if>
        </where>
        <if test="orderBy!=null and orderBy!=''">
            <choose>
                <when test="orderBy == 'new'">
                    <!-- 按照发布时间倒序排列 -->
                    order by goods_id desc
                </when>
                <when test="orderBy == 'price'">
                    <!-- 按照售价从小到大排列 -->
                    order by selling_price asc
                </when>
                <otherwise>
                    <!-- 默认按照库存数量从大到小排列 -->
                    order by stock_num desc
                </otherwise>
            </choose>
        </if>
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="getTotalNewBeeMallGoodsBySearch" parameterType="Map" resultType="int">
        select count(*) from tb_newbee_mall_goods_info
        <where>
            <if test="keyword!=null and keyword!=''">
                and (goods_name like CONCAT('%',#{keyword},'%') or goods_intro like CONCAT('%',#{keyword},'%'))
            </if>
            <if test="goodsCategoryId!=null and goodsCategoryId!=''">
                and goods_category_id = #{goodsCategoryId}
            </if>
            <if test="goodsSellStatus!=null">
                and goods_sell_status = #{goodsSellStatus}
            </if>
        </where>
    </select>

    <select id="selectByPrimaryKeys" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_newbee_mall_goods_info
        where goods_id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
        order by field(goods_id,
        <foreach item="id" collection="list" separator=",">
            #{id}
        </foreach>
        );
    </select>
    <select id="getTotalNewBeeMallGoods" parameterType="Map" resultType="int">
        select count(*) from tb_newbee_mall_goods_info
        <where>
            <if test="goodsName!=null and goodsName!=''">
                and goods_name like CONCAT('%','#{goodsName}','%')
            </if>
            <if test="goodsSellStatus!=null and goodsSellStatus!=''">
                and goods_sell_status = #{goodsSellStatus}
            </if>
            <if test="startTime != null and startTime.trim() != ''">
                and create_time &gt; #{startTime}
            </if>
            <if test="endTime != null and endTime.trim() != ''">
                and create_time &lt; #{endTime}
            </if>
        </where>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_newbee_mall_goods_info
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="ltd.newbee.mall.entity.NewBeeMallGoods">
    insert into tb_newbee_mall_goods_info (goods_id, goods_name, goods_intro, 
      goods_cover_img, goods_carousel, original_price, 
      selling_price, stock_num, tag, 
      goods_sell_status, create_user, create_time, 
      update_user, update_time, goods_detail_content
      )
    values (#{goodsId,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, #{goodsIntro,jdbcType=VARCHAR}, 
      #{goodsCoverImg,jdbcType=VARCHAR}, #{goodsCarousel,jdbcType=VARCHAR}, #{originalPrice,jdbcType=INTEGER}, 
      #{sellingPrice,jdbcType=INTEGER}, #{stockNum,jdbcType=INTEGER}, #{tag,jdbcType=VARCHAR}, 
      #{goodsSellStatus,jdbcType=TINYINT}, #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{goodsDetailContent,jdbcType=LONGVARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="ltd.newbee.mall.entity.NewBeeMallGoods">
        insert into tb_newbee_mall_goods_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="goodsName != null">
                goods_name,
            </if>
            <if test="goodsIntro != null">
                goods_intro,
            </if>
            <if test="goodsCategoryId != null">
                goods_category_id,
            </if>
            <if test="goodsCoverImg != null">
                goods_cover_img,
            </if>
            <if test="goodsCarousel != null">
                goods_carousel,
            </if>
            <if test="originalPrice != null">
                original_price,
            </if>
            <if test="sellingPrice != null">
                selling_price,
            </if>
            <if test="stockNum != null">
                stock_num,
            </if>
            <if test="tag != null">
                tag,
            </if>
            <if test="goodsSellStatus != null">
                goods_sell_status,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="goodsDetailContent != null">
                goods_detail_content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="goodsId != null">
                #{goodsId,jdbcType=BIGINT},
            </if>
            <if test="goodsName != null">
                #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="goodsIntro != null">
                #{goodsIntro,jdbcType=VARCHAR},
            </if>
            <if test="goodsIntro != null">
                #{goodsCategoryId,jdbcType=BIGINT},
            </if>
            <if test="goodsCoverImg != null">
                #{goodsCoverImg,jdbcType=VARCHAR},
            </if>
            <if test="goodsCarousel != null">
                #{goodsCarousel,jdbcType=VARCHAR},
            </if>
            <if test="originalPrice != null">
                #{originalPrice,jdbcType=INTEGER},
            </if>
            <if test="sellingPrice != null">
                #{sellingPrice,jdbcType=INTEGER},
            </if>
            <if test="stockNum != null">
                #{stockNum,jdbcType=INTEGER},
            </if>
            <if test="tag != null">
                #{tag,jdbcType=VARCHAR},
            </if>
            <if test="goodsSellStatus != null">
                #{goodsSellStatus,jdbcType=TINYINT},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="goodsDetailContent != null">
                #{goodsDetailContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="ltd.newbee.mall.entity.NewBeeMallGoods">
        update tb_newbee_mall_goods_info
        <set>
            <if test="goodsName != null">
                goods_name = #{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="goodsIntro != null">
                goods_intro = #{goodsIntro,jdbcType=VARCHAR},
            </if>
            <if test="goodsCategoryId != null">
                goods_category_id = #{goodsCategoryId,jdbcType=BIGINT},
            </if>
            <if test="goodsCoverImg != null">
                goods_cover_img = #{goodsCoverImg,jdbcType=VARCHAR},
            </if>
            <if test="goodsCarousel != null">
                goods_carousel = #{goodsCarousel,jdbcType=VARCHAR},
            </if>
            <if test="originalPrice != null">
                original_price = #{originalPrice,jdbcType=INTEGER},
            </if>
            <if test="sellingPrice != null">
                selling_price = #{sellingPrice,jdbcType=INTEGER},
            </if>
            <if test="stockNum != null">
                stock_num = #{stockNum,jdbcType=INTEGER},
            </if>
            <if test="tag != null">
                tag = #{tag,jdbcType=VARCHAR},
            </if>
            <if test="goodsSellStatus != null">
                goods_sell_status = #{goodsSellStatus,jdbcType=TINYINT},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="goodsDetailContent != null">
                goods_detail_content = #{goodsDetailContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where goods_id = #{goodsId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="ltd.newbee.mall.entity.NewBeeMallGoods">
    update tb_newbee_mall_goods_info
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_intro = #{goodsIntro,jdbcType=VARCHAR},
      goods_cover_img = #{goodsCoverImg,jdbcType=VARCHAR},
      goods_carousel = #{goodsCarousel,jdbcType=VARCHAR},
      original_price = #{originalPrice,jdbcType=INTEGER},
      selling_price = #{sellingPrice,jdbcType=INTEGER},
      stock_num = #{stockNum,jdbcType=INTEGER},
      tag = #{tag,jdbcType=VARCHAR},
      goods_sell_status = #{goodsSellStatus,jdbcType=TINYINT},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      goods_detail_content = #{goodsDetailContent,jdbcType=LONGVARCHAR}
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </update>
    <update id="updateByPrimaryKey" parameterType="ltd.newbee.mall.entity.NewBeeMallGoods">
    update tb_newbee_mall_goods_info
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_intro = #{goodsIntro,jdbcType=VARCHAR},
      goods_cover_img = #{goodsCoverImg,jdbcType=VARCHAR},
      goods_carousel = #{goodsCarousel,jdbcType=VARCHAR},
      original_price = #{originalPrice,jdbcType=INTEGER},
      selling_price = #{sellingPrice,jdbcType=INTEGER},
      stock_num = #{stockNum,jdbcType=INTEGER},
      tag = #{tag,jdbcType=VARCHAR},
      goods_sell_status = #{goodsSellStatus,jdbcType=TINYINT},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </update>
  <select id="getImageList" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.GoodsImage">
      select goods_id, path from goods_image
      where goods_id = #{goodsId,jdbcType=BIGINT}
  </select>
  <select id="getGoodsDesc"  parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.GoodsDesc">
     select goods_id, color, size, material, weight, warranty_year, set_date, warp_size from goods_desc
      where goods_id = #{goodsId,jdbcType=BIGINT}
  </select>
   <select id="copyGoodsDesc"  parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.GoodsDesc">
     select goods_id, color, size, material, weight, warranty_year, set_date, warp_size from goods_desc
      where goods_id = #{goodsId,jdbcType=BIGINT}
  </select>


  <select id="getGoodsQaList" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.GoodsQa">
      select id,goods_id, question, submit_date, answer, answer_date, helped_num from goods_qa
      where goods_id = #{goodsId,jdbcType=BIGINT}
  </select> 
  
  <select id="getRevList" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.GoodsReview">
 	  select r.id, r.star,r.review_num, r.comment_date, r.title, r.content, r.picture, r.goods_id, u.nick_name, i.goods_name
      from goods_review as r join tb_newbee_mall_user as u on r.custermer_id = u.user_id join tb_newbee_mall_goods_info as i  
      on r.goods_id = i.goods_id
      where r.goods_id = #{goodsId,jdbcType=BIGINT} order by r.star DESC
  </select>
  
    <select id="getRevListLimit" parameterType="Map" resultType="ltd.newbee.mall.entity.GoodsReview">
 	  select r.id, r.star,r.review_num, r.comment_date, r.title, r.content, r.picture, r.goods_id, u.nick_name, i.goods_name
      from goods_review as r join tb_newbee_mall_user as u on r.custermer_id = u.user_id join tb_newbee_mall_goods_info as i  
      on r.goods_id = i.goods_id where r.goods_id = #{goodsId,jdbcType=BIGINT}
      <!-- where r.goods_id = #{goodsId,jdbcType=BIGINT}  -->
           <if test="orderBy!=null and orderBy!=''">
         <choose>
                <otherwise>             
                    order by r.star
                </otherwise>
         </choose>
      </if>
      <if test="start!=null and limit!=null">
            limit #{start},#{limit}
      </if>
  </select>
    <select id="findGoodsReviewCount" parameterType="Map" resultType="int">
      select count(*) from goods_review as r join tb_newbee_mall_user as u on r.custermer_id = u.user_id join tb_newbee_mall_goods_info as i  
      on r.goods_id = i.goods_id
  </select> 
  
    <select id="copyRevList" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.GoodsReview">
 	  select r.id,r.goods_id, r.star,r.review_num, r.comment_date, r.title, r.content, r.picture, r.goods_id, u.nick_name, i.goods_name
      from goods_review as r join tb_newbee_mall_user as u on r.custermer_id = u.user_id join tb_newbee_mall_goods_info as i  
      on r.goods_id = i.goods_id
      where r.id in 
      <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
      </foreach>
  </select>
  
  <!--  Adding XML to achieve paging added by coca 2021/04/23 -->
  <select id="findGoodsQaList" parameterType="Map" resultType="ltd.newbee.mall.entity.GoodsQa">
      select id,goods_id, question, submit_date, answer, answer_date, helped_num from goods_qa 
      limit #{start},#{limit} 
  </select>  
  <!--  Adding sorting way added by coca 2021/04/23 -->
  
  <select id="findGoodsQaSortSubmitDate" parameterType="Map" resultType="ltd.newbee.mall.entity.GoodsQa">
      select id,goods_id, question, submit_date, answer, answer_date, helped_num from goods_qa 
      <if test="orderBy!=null and orderBy!=''">
         <choose>
                <when test="orderBy == 'submit_date'">
                    <!-- 按照发布时间排列 -->
                    order by submit_date 
                </when>
                    <!-- 按照参考人数排列 -->
                <when test="orderBy == 'helped_num'">
                    order by helped_num 
                </when>
                <!-- 默认按照id从小到大 -->
                <otherwise>             
                    order by id
                </otherwise>
         </choose>
      </if>
      <if test="start!=null and limit!=null">
            limit #{start},#{limit}
      </if>
  </select>   
  <!-- adding count added by coca 2021/04/24 -->
  <select id="findGoodsQaCount" parameterType="Map" resultType="int">
      select count(*) from goods_qa
  </select> 
  
  <!-- adding insert added by coca 2021/04/24 -->
 <insert id="qaInsert" parameterType="ltd.newbee.mall.entity.GoodsQa">
    insert into goods_qa (id, goods_id, question, submit_date)
    values (#{id,jdbcType=VARCHAR}, #{goodsId,jdbcType=INTEGER}, #{question,jdbcType=VARCHAR}, #{submitDate,jdbcType=TIMESTAMP})  
  </insert>
    <insert id="qaInsertSelective" parameterType="ltd.newbee.mall.entity.GoodsQa">
        insert into goods_qa
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="question != null">
                question,
            </if>
            <if test="submitDate != null">
                submit_date,
            </if>
            <if test="answer != null">
                answer,
            </if>
            <if test="answerDate != null">
                answer_date,
            </if>
            <if test="helpedNum != null">
                helped_num,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="goodsId != null">
                #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="question != null">
                #{question,jdbcType=VARCHAR},
            </if>
            <if test="submitDate != null">
                #{submitDate,jdbcType=TIMESTAMP},
            </if>
            <if test="answer != null">
                #{answer,jdbcType=VARCHAR},
            </if>
            <if test="answerDate != null">
                #{answerDate,jdbcType=TIMESTAMP},
            </if>
            <if test="helpedNum != null">
                #{helpedNum,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="getMaxQaId" parameterType="java.lang.Long" resultType="java.lang.Long">
      select max(id) from goods_qa where goods_id = #{goodsId,jdbcType=BIGINT}
   </select> 
   
  <!--   add review helpNum event added by coca 2021/05/04 -->
   <insert id="insertHelpNum" parameterType="ltd.newbee.mall.entity.GoodsReviewHelpNum">
        insert into help_num (review_id, user_id) values (#{reviewId, jdbcType=INTEGER},#{userId, jdbcType=BIGINT})
        
   </insert>
   <update id="updateReviewNum">     
            update goods_review set review_num = review_num + 1
            where id = #{reviewId} 
   </update>
   <select id="getRevListHelpNum" parameterType="int" resultType="java.lang.Long">
 	  select review_num from goods_review 
      where id = #{reviewId,jdbcType=BIGINT}
  </select>

<!--   to achieve inquiry added by coca 2021/05/07 -->
  <select id="getInforDropDownList" parameterType="Map" resultType="int">
  	select goods_id, goods_name from tb_newbee_mall_goods_info where goods_name like CONCAT('%',#{keyword},'%')    
  </select>
  <insert id="insertKeyword" parameterType="ltd.newbee.mall.entity.SearchHistory">
        insert into search_history
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="keyword != null">
                keyword,
            </if>
            <if test="date != null">
                date,
            </if>
            
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="keyword != null">
                #{keyword,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                #{date,jdbcType=TIMESTAMP},
            </if>
            
        </trim>
    </insert>
   <select id="getMaxShId" parameterType="java.lang.Long" resultType="java.lang.Long">
      select max(id) from search_history 
   </select> 
   <!--  table_sale xml added by coca 2021/05/11 -->
    <select id="getTableSale" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.TableSale">
      select id, goods_id, start_date, end_date from table_sale
      goods_id = #{goodsId,jdbcType=BIGINT}
  </select> 
    <!--  goods_sale xml added by coca 2021/05/29 -->
    <select id="getNewGoodsSale" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.GoodsSale">
      select id, name, start_date, end_date, campaign, content1, content2, content3, content4, content5, flag from goods_sale    
  </select> 
    <!--  GoodsCoupon xml added by coca 2021/05/11 -->
    <select id="getGoodsCoupon" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.GoodsCoupon">
      select coupon_id, coupon_name, flag, start_date, end_date from goods_coupon
      where coupon_id = #{couponId,jdbcType=BIGINT}
  </select> 
     <!--  GoodsCategory xml added by coca 2021/05/28 -->
    <select id="getTableCategory" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.TableCategory">
      select id, category_id, start_date, end_date table_category
      where category_id = #{categoryId,jdbcType=BIGINT}
  </select> 
  <!--  insert table_sale xml added by coca 2021/05/11 -->
  <insert id="InsertTableSale" parameterType="java.lang.Long">
        insert into table_sale
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="startDate != null">
                start_date,
            </if>
            <if test="endDate != null">
                end_date,
            </if>
            
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="goodsId != null">
                #{goodsId,jdbcType=BIGINT},
            </if>
            <if test="startDate != null">
                #{startDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endDate != null">
                #{endDate,jdbcType=TIMESTAMP},
            </if>
            
        </trim>
    </insert>
    <!--  insert goods_sale xml added by coca 2021/05/11 -->
     <insert id="InsertGoodsSale" parameterType="java.lang.Long">
        insert into goods_sale
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="startDate != null">
                start_date,
            </if>
            <if test="endDate != null">
                end_date,
            </if>
            <if test="campaign != null">
                campaign,
            </if>
            <if test="content1 != null">
                content1,
            </if>
            <if test="content2 != null">
                content2,
            </if>
             <if test="content3 != null">
                content3,
            </if>
            <if test="content4 != null">
                content4,
            </if>
            <if test="content5 != null">
                content5,
            </if>
            <if test="flag != null">
                flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="startDate != null">
                #{startDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endDate != null">
                #{endDate,jdbcType=TIMESTAMP},
            </if>
            <if test="campaign != null">
                #{campaign,jdbcType=VARCHAR},
            </if>
            <if test="content1 != null">
                #{content1,jdbcType=VARCHAR},
            </if>
            <if test="content2 != null">
                #{content2,jdbcType=VARCHAR},
            </if>
             <if test="content3 != null">
                #{content3,jdbcType=VARCHAR},
            </if>
            <if test="content4 != null">
                #{content4,jdbcType=VARCHAR},
            </if>
            <if test="content5 != null">
                #{content5,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=VARCHAR},
            </if>
            
        </trim>
    </insert>
	<select id="findMaxGsId" parameterType="java.lang.Long" resultType= "java.lang.Long">      
	    select max(id) from goods_sale         
	</select>
    <!--insert  GoodsCoupon xml added by coca 2021/05/11 -->
    <insert id="InsertGoodsCoupon" parameterType="java.lang.Long">
        insert into goods_coupon
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="couponId != null">
                coupon_id,
            </if>
            <if test="couponName != null">
                coupon_name,
            </if>
            <if test="flag != null">
                flag,
            </if>
            <if test="startDate != null">
                start_date,
            </if>
            <if test="endDate != null">
                end_date,
            </if>
            
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="couponId != null">
                #{couponId,jdbcType=BIGINT},
            </if>
            <if test="couponName != null">
                #{couponName,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=VARCHAR},
            </if>
             <if test="startDate != null">
                #{startDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endDate != null">
                #{endDate,jdbcType=TIMESTAMP},
            </if>
         
            </trim>
    </insert>
     <!--insert  GoodsCategory xml added by coca 2021/05/11 -->
     <insert id="InsertTableCategory" parameterType="java.lang.Long">
        insert into table_category
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
             <if test="startDate != null">
                start_date,
            </if>
            <if test="endDate != null">
                end_date,
            </if>
            
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=BIGINT},
            </if>
            <if test="startDate != null">
                #{startDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endDate != null">
                #{endDate,jdbcType=TIMESTAMP},
            </if>
         
            </trim>
    </insert>
   <!-- to achieve insert tc record added by coca 2021/06/01 -->
    <select id="findMaxTcId" parameterType="java.lang.Long" resultType= "java.lang.Long">      
	    select max(id) from table_category         
	</select>
      <!-- add download goods_sale xml added by coca 2021/05/14 -->
    <select id="dlGetGoodsSale" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.GoodsSale">
      select id, name, start_date, end_date, campaign, content1, content2, content3, content4, content5, flag from goods_sale
      where id in 
      <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
      </foreach>
  </select>
   
   <!-- to achieve paging for goods sale added by coca 2021/05/15 -->
  <select id="findGoodsSalePagingBySearch" parameterType="Map" resultMap="GoodsSaleResultMap">
        select
        id, name, start_date, end_date, campaign, content1, content2, content3, content4, content5, flag
        from goods_sale  
        <where>
            <if test="keyword!=null and keyword!=''">
                and name like CONCAT('%',#{keyword},'%')
            </if>
        </where> 
        <if test="orderBy!=null and orderBy!='' and desAsc!=null and desAsc!=''"> 
        	order by #{orderBy} #{desAsc}
        </if>
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
   </select>
    <!-- adding count added by coca 2021/04/24 -->
   <select id="findGoodsSaleCount" parameterType="Map" resultType="int">
      select count(*) from goods_sale
  </select>
  <!-- キャンペーンの抽出 added by coca 2021/05/28 -->
   <select id="getGsTc" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.TableCategory">
 	  select g.id, g.name, g.startDate, g.endDate, g.campaign, g.content1, g.content2, g.content3, g.content4, g.content5, g.flag
      g.flag, c.id, c.category_id, c.start_date, c.end_date from goods_sale as g join tableb_category as c on g.id = c.id 
      where g.id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getGsTs" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.TableSale">
 	  select g.id, g.name, g.startDate, g.endDate, g.campaign, g.content1, g.content2, g.content3, g.content4, g.content5, g.flag
      g.flag, s.id, s.goodsId, s.startDate, s.endDate from goods_sale as g join tb_sale as s on g.id = s.id
      where g.id = #{id,jdbcType=BIGINT}
  </select>
  <!--   add delete  for tc by coca 2021/05/30 -->
  <delete id="deleteByTcPrimaryKey" parameterType="java.lang.Long">
    delete from table_category
    where category_id = #{categoryId,jdbcType=BIGINT}
  </delete>
  <select id="getGoodsSaleList" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.GoodsSale">
      select id, name, start_date, end_date, campaign, content1, content2, content3, content4, content5, flag from goods_sale
      where id = #{id,jdbcType=BIGINT}   
  </select>
       <!--insert  GoodsCategory xml added by coca 2021/06/02 -->
     <insert id="insertCampaignSent" parameterType="java.lang.Long">
        insert into campaign_set
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="campaignId != null">
                campaign_id,
            </if>
            <if test="primaryGoodsId != null">
                primary_goods_id,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
             <if test="subGoodsId != null">
                sub_goods_id,
            </if>
             <if test="startDate != null">
                start_date,
            </if>
            <if test="endDate != null">
                end_date,
            </if>
            
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="campaignId != null">
                #{campaignId,jdbcType=BIGINT},
            </if>
             <if test="primaryGoodsId != null">
                #{primaryGoodsId,jdbcType=BIGINT},
            </if>
             <if test="categoryId != null">
                #{categoryId,jdbcType=BIGINT},
            </if>
            <if test="subGoodsId != null">
                #{subGoodsId,jdbcType=BIGINT},
            </if>
            <if test="startDate != null">
                #{startDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endDate != null">
                #{endDate,jdbcType=TIMESTAMP},
            </if>
         
            </trim>
    </insert>
    <select id="findMaxCsId" parameterType="java.lang.Long" resultType= "java.lang.Long">      
	    select max(id) from campaign_set         
	</select>
	<!-- added by coca 2021/06/03 -->
	<select id="findByGoodsId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>

        from tb_newbee_mall_goods_info
        where goods_id = #{goodsId,jdbcType=BIGINT}
    </select>
    <select id="findBygoodsCategoryId"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>

        from tb_newbee_mall_goods_info
        where goods_category_id = #{goodsCategoryId,jdbcType=BIGINT}
    </select>
    <!-- added by coca 2021/06/19-->
   <delete id="deleteByTsPrimaryKey" parameterType="java.lang.Long">
    delete from table_sale
    where goods_id = #{goodsId,jdbcType=BIGINT}
   </delete>
   <delete id="deleteByCsPrimaryKey" parameterType="java.lang.Long">
    delete from campaign_set
    where primary_goods_id = #{primaryGoodsId,jdbcType=BIGINT}
   </delete>
   <delete id="deleteByCsTsPrimaryKey" parameterType="java.lang.Long">
    delete  campaign_set, table_sale from campaign_set LEFT JOIN table_sale ON campaign_set.primary_goods_id = table_sale.goods_id 
    WHERE campaign_set.primary_goods_id = #{primaryGoodsId,jdbcType=BIGINT}
   </delete>
    <select id="getTsJoinCategory" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.TsJoinCategory">
        select
        n.goods_id, n.goods_name, n.goods_category_id, ts.id, ts.goods_id, ts.start_date, ts.end_date from tb_newbee_mall_goods_info as n 
        left join table_sale as ts on n.goods_id = ts.goods_id where goods_category_id = #{goodsCategoryId,jdbcType=BIGINT} 
    </select>
    <!-- ================================================================================================================================================ -->
	<!-- tabelog XML added by coca 2021/7/20 -->
	<select id="getDetailTitle" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.DetailTitle">
		select id,name, star, save_num,style, comment_num from detail_title
		where id = #{id,jdbcType=BIGINT}
	</select>

	<select id="getRestaurantDesc" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.RestaurantDesc">
		select id,nearby_station, genre_id, night_budget, day_budget,
		rest_day from restaurant_desc
		where id = #{id,jdbcType=BIGINT}
	</select>

	<select id="getTbGenre" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.TbGenre">
		select genre_id,name_1, name_2, name_3,id from tb_genre
		where id = #{id,jdbcType=BIGINT}
	</select>

	<select id="getTabelogCategory" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.TabelogCategory">
		select category_id, category_name from tabelog_category
		where category_id= #{categoryId,jdbcType=BIGINT}
	</select> 
		<!-- tabelog tb_comment XML added by coca 2021/7/20 -->
	<select id="getTbComment" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.TbComment">
		select id,comment_id, topic, comment, image,visit_date,star,sum,visit_time from tb_comment
		where id = #{id,jdbcType=BIGINT}
	</select>
	 <select id="getTbCommentTotal" parameterType="Map" resultType="int">
	select count(*) from tb_comment
	</select>
	<select id="getTbCommentAvg" parameterType="Map" resultType="double">
		SELECT AVG(star) FROM tb_comment
	</select>
	<select id="getJoinTabelogCategory" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.JoinTabelogCategory">
 	  select t.id, t.station_collection_id,t.genre_collection_id, g.genre_id,g.name,g.genre_collection_id, s.closed_station_id, 
 	  s.station, s.station_collection_id from tabelog_category as t join tb_genre as g on t.genre_collection_id = g.genre_collection_id join tb_station as s  
      on t.station_collection_id = s.station_collection_id
      where t.id = #{id,jdbcType=BIGINT}
  </select>
  	<select id="getTopImage" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.TopImage">
		select id,path from top_image
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="getTopPage" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.TopPage">
		select id,notice1,notice2,notice3,notice4,notice5,notice6,top_appeal,top_appeal_content from top_page
		where id = #{id,jdbcType=BIGINT}
	</select>
		<select id="getTopKodawari" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.TopKodawari">
		select id,path,modal_title,label,content from top_kodawari
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="getTopHygiene" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.TopHygiene">
		select id,title,instore,hygiene_data1,hygiene_data2,customer,hygiene_data3,text_notice1,text_notice2a,text_notice2link,
		text_notice2c,text_notice2d,text_notice3link,text_notice3a from top_hygiene
		where id = #{id,jdbcType=BIGINT}
	</select>
		<select id="getTopCourse" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.TopCourse">
		select id,title,sub_title,course_title,course_number,course_list,course_book,course_detail,course_price,tax,
		member,detail_member,oneNeng,path_pic,path_link,path_more from top_course
		where id = #{id,jdbcType=BIGINT}
	</select>
		<select id="getTopCoupon" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.TopCoupon">
		select id,title,path,subject,description,detail,coupon_notice,oneNeng from top_coupon
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="getTopPostphoto" parameterType="java.lang.Long" resultType="ltd.newbee.mall.entity.TopPostphoto">
		select id, title, submit, path_submit, path_link, path_pic, path_more, show_users, log_on_date, path_all, name, place, comment, 
		path_continue, oneNeng1, oneNeng2 from top_postphoto
		where id = #{id,jdbcType=BIGINT}
	</select>
	
	 <!--   add top_postphoto_num added by coca 2021/08/02 -->
   <insert id="insertTopPostphotoNum" parameterType="ltd.newbee.mall.entity.GoodsReviewHelpNum">
        insert into top_postphoto_num (review_id, user_id) values (#{reviewId, jdbcType=INTEGER},#{userId, jdbcType=BIGINT})
        
   </insert>
   <update id="updateTopPostphotoNum">     
            update top_postphoto set show_users = show_users + 1
            where oneNeng1 = #{reviewId} 
   </update>
   <select id="getTopPostphotoNum" parameterType="int" resultType="java.lang.Long">
 	  select show_users from top_postphoto 
      where oneNeng1 = #{reviewId,jdbcType=BIGINT}
  </select>
  
  
  
  <delete id="deleteTopPostphotoNum" parameterType="java.lang.Long">
    delete from top_postphoto_num
    where review_id = #{reviewId, jdbcType=INTEGER}
  </delete>
  <update id="updateMinusTopPostphotoNum">     
            update top_postphoto set show_users = show_users - 1
            where oneNeng1 = #{reviewId} 
  </update>
  <!--   add top_kuchikomi added by coca 2021/08/05 -->
	<select id="getKuchikomi" parameterType="java.lang.Long"
		resultType="ltd.newbee.mall.entity.Kuchikomi">
		select id, path_img, user, count, path_authentication, authentication,
		log_num, res_num, follow_num,
		follower_num, path_href, place, comment, path_continue, heart_count, visit_date,
		dinner, lunch, visit_count,
		oneNeng1, oneNeng2, comment_id from top_kuchikomi where id =
		#{id,jdbcType=BIGINT}
	</select>
	
	  <!--   add top_matome added by coca 2021/08/05 -->
	<select id="getTopMatome" parameterType="java.lang.Long"
		resultType="ltd.newbee.mall.entity.TopMatome">
		select id, head, path_img, path_href, title, description,
		path_user, path_matome, matome, oneNeng from top_matome where id =
		#{id,jdbcType=BIGINT}
	</select>
	
	  <!--   add basic_information added by coca 2021/08/06 -->
	<select id="getBasicInformation" parameterType="java.lang.Long"
		resultType="ltd.newbee.mall.entity.BasicInformation">
		select access3, id, name, genre, phone_number, reservation,
		address1, access1, work_time, official_budget, aggregate_budget,
		pay_way, oneNeng1, oneNeng2, access2, access4, pathBigMap,
		pathCloseMap, address2, address3, address4, address5, path1, path2,
		path3, path4 from basic_information where id =
		#{id,jdbcType=BIGINT}
	</select>

	<!-- add seat_facility added by coca 2021/08/06 -->
	<select id="getSeatFacility" parameterType="java.lang.Long"
		resultType="ltd.newbee.mall.entity.SeatFacility">
		select id, seats_number, private_room, reserved, smoking,
		parking_Lot, space_equipment, mobile_phone, oneNeng1, oneNeng2 from
		seat_facility where id =
		#{id,jdbcType=BIGINT}
	</select>

	<!-- addmenu_course added by coca 2021/08/06 -->
	<select id="getMenuCourse" parameterType="java.lang.Long"
		resultType="ltd.newbee.mall.entity.MenuCourse">
		select id, menu_course, drink, food from
		menu_course where id =
		#{id,jdbcType=BIGINT}
	</select>

	<!-- add　features_related_information added by coca 2021/08/06 -->
	<select id="getFeaturesRelatedInfo" parameterType="java.lang.Long"
		resultType="ltd.newbee.mall.entity.FeaturesRelatedInfo">
		select id, use_scene, with_children, homepage,
		official_account, phone_num, remarks, related_store_info,
		first_contributor, oneNeng1, oneNeng2 from
		features_related_information where id =
		#{id,jdbcType=BIGINT}
	</select>
	
		<!-- pension added by coca 2021/08/23 -->
	<select id="getPension" parameterType="java.lang.Long"
		resultType="ltd.newbee.mall.entity.Pension">
		select id, paid_insurance_month, all_exemption_month, one_quarter_paid_month, half_paid_month, three_quarter_paid_month, age, name, address, sexual, phone, birthday from
		pension where id =
		#{id,jdbcType=BIGINT}
	</select>
	<select id="getBeforeAge" parameterType="java.lang.Long"
		resultType="ltd.newbee.mall.entity.BeforeAge">
		select age, s, t from
		before_age where age =
		#{age,jdbcType=VARCHAR}
	</select>
	<select id="getAfterAge" parameterType="java.lang.Long"
		resultType="ltd.newbee.mall.entity.AfterAge">
		select age, s, t from
		after_age where age =
		#{age,jdbcType=VARCHAR}
	</select>
</mapper>